
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  password_hash: 'password_hash',
  role: 'role',
  risk_appetite: 'risk_appetite',
  balance: 'balance',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Investment_productsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  investment_type: 'investment_type',
  tenure_months: 'tenure_months',
  annual_yield: 'annual_yield',
  risk_level: 'risk_level',
  min_investment: 'min_investment',
  max_investment: 'max_investment',
  description: 'description',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.InvestmentsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id',
  amount: 'amount',
  invested_at: 'invested_at',
  status: 'status',
  expected_return: 'expected_return',
  maturity_date: 'maturity_date'
};

exports.Prisma.Transaction_logsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  email: 'email',
  endpoint: 'endpoint',
  http_method: 'http_method',
  status_code: 'status_code',
  error_message: 'error_message',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.risk_level = exports.$Enums.risk_level = {
  low: 'low',
  moderate: 'moderate',
  high: 'high'
};

exports.user_role = exports.$Enums.user_role = {
  user: 'user',
  admin: 'admin'
};

exports.investment_type = exports.$Enums.investment_type = {
  bond: 'bond',
  fd: 'fd',
  mf: 'mf',
  etf: 'etf',
  other: 'other'
};

exports.risk_level_type = exports.$Enums.risk_level_type = {
  low: 'low',
  moderate: 'moderate',
  high: 'high'
};

exports.status_type = exports.$Enums.status_type = {
  active: 'active',
  matured: 'matured',
  cancelled: 'cancelled'
};

exports.http_type = exports.$Enums.http_type = {
  GET: 'GET',
  POST: 'POST',
  PUT: 'PUT',
  PATCH: 'PATCH',
  DELETE: 'DELETE'
};

exports.Prisma.ModelName = {
  users: 'users',
  investment_products: 'investment_products',
  investments: 'investments',
  transaction_logs: 'transaction_logs'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Projects\\Test\\GripInvest\\backend\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Projects\\Test\\GripInvest\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../generated/prisma\"\n  binaryTargets = [\"native\", \"debian-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nmodel users {\n  id                  String                @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  first_name          String                @db.VarChar(100)\n  last_name           String?               @db.VarChar(100)\n  email               String                @unique @db.VarChar(255)\n  password_hash       String                @db.VarChar(255)\n  role                user_role             @default(user)\n  risk_appetite       risk_level            @default(moderate)\n  balance             Decimal               @default(0.0) @db.Decimal(12, 2)\n  created_at          DateTime?             @db.Timestamptz(6)\n  updated_at          DateTime?             @db.Timestamptz(6)\n  investment_products investment_products[]\n  investments         investments[]\n  transaction_logs    transaction_logs[]\n}\n\nmodel investment_products {\n  id              String          @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  name            String          @unique @db.VarChar(255)\n  investment_type investment_type\n  tenure_months   Int\n  annual_yield    Decimal         @db.Decimal(5, 2)\n  risk_level      risk_level_type\n  min_investment  Decimal         @default(1000.00) @db.Decimal(12, 2)\n  max_investment  Decimal?        @db.Decimal(12, 2)\n  description     String?\n  created_by      String?         @db.Uuid\n  created_at      DateTime?       @default(now()) @db.Timestamp(6)\n  updated_at      DateTime?       @default(now()) @db.Timestamp(6)\n  users           users?          @relation(fields: [created_by], references: [id], onUpdate: NoAction)\n  investments     investments[]\n}\n\nmodel investments {\n  id                  String              @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id             String              @db.Uuid\n  product_id          String              @db.Uuid\n  amount              Decimal             @db.Decimal(12, 2)\n  invested_at         DateTime?           @default(now()) @db.Timestamptz(6)\n  status              status_type?        @default(active)\n  expected_return     Decimal?            @db.Decimal(12, 2)\n  maturity_date       DateTime?           @db.Date\n  investment_products investment_products @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users               users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel transaction_logs {\n  id            BigInt    @id @default(autoincrement())\n  user_id       String?   @db.Uuid\n  email         String?   @db.VarChar(255)\n  endpoint      String    @db.VarChar(255)\n  http_method   http_type\n  status_code   Int\n  error_message String?\n  created_at    DateTime? @default(now()) @db.Timestamptz(6)\n  users         users?    @relation(fields: [user_id], references: [id], onUpdate: NoAction)\n\n  @@index([email], map: \"idx_transaction_logs_email\")\n  @@index([user_id], map: \"idx_transaction_logs_user_id\")\n}\n\nenum risk_level {\n  low\n  moderate\n  high\n}\n\nenum user_role {\n  user\n  admin\n}\n\nenum investment_type {\n  bond\n  fd\n  mf\n  etf\n  other\n}\n\nenum risk_level_type {\n  low\n  moderate\n  high\n}\n\nenum status_type {\n  active\n  matured\n  cancelled\n}\n\nenum http_type {\n  GET\n  POST\n  PUT\n  PATCH\n  DELETE\n}\n",
  "inlineSchemaHash": "bdcc0eea274f8a61d289227683eaacdf61dbaecc54b78434af0986f2bb0466ab",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"first_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"user_role\"},{\"name\":\"risk_appetite\",\"kind\":\"enum\",\"type\":\"risk_level\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"investment_products\",\"kind\":\"object\",\"type\":\"investment_products\",\"relationName\":\"investment_productsTousers\"},{\"name\":\"investments\",\"kind\":\"object\",\"type\":\"investments\",\"relationName\":\"investmentsTousers\"},{\"name\":\"transaction_logs\",\"kind\":\"object\",\"type\":\"transaction_logs\",\"relationName\":\"transaction_logsTousers\"}],\"dbName\":null},\"investment_products\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investment_type\",\"kind\":\"enum\",\"type\":\"investment_type\"},{\"name\":\"tenure_months\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"annual_yield\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"risk_level\",\"kind\":\"enum\",\"type\":\"risk_level_type\"},{\"name\":\"min_investment\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"max_investment\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"investment_productsTousers\"},{\"name\":\"investments\",\"kind\":\"object\",\"type\":\"investments\",\"relationName\":\"investment_productsToinvestments\"}],\"dbName\":null},\"investments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"invested_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"status_type\"},{\"name\":\"expected_return\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"maturity_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"investment_products\",\"kind\":\"object\",\"type\":\"investment_products\",\"relationName\":\"investment_productsToinvestments\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"investmentsTousers\"}],\"dbName\":null},\"transaction_logs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"http_method\",\"kind\":\"enum\",\"type\":\"http_type\"},{\"name\":\"status_code\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"error_message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"transaction_logsTousers\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

